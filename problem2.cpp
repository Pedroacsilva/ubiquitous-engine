/*Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.*/

#include <iostream>
#include <vector>
int main(int argc, char const *argv[]) {
  unsigned int MAX_LIMIT = 4000000;
  std::vector<unsigned int> fib_terms;
  fib_terms.push_back(1);
  fib_terms.push_back(2);
  unsigned int i = 2;
  unsigned int term = 0;
  unsigned int sum = 2;
  while (term < MAX_LIMIT) {
    term = fib_terms.back() + fib_terms[fib_terms.size() - 2];
    (term % 2 == 0) ? sum += term : sum += 0;
    fib_terms.push_back(term);
    // if (term < 1000)
    std::cout << term << "\n";
  }
  std::cout << "Sum is: " << sum;
  return 0;
}